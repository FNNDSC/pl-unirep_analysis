name: build

on:
  push:
    branches: [ main ]
    tags:
      - '[0-9]+.[0-9]+.[0-9]+*'
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-20.04

    steps:
      - name: Get git tag
        id: git_info
        if: startsWith(github.ref, 'refs/tags/')
        run: echo "::set-output name=tag::${GITHUB_REF##*/}"
      - name: Get project info
        id: determine
        env:
          git_tag: ${{ steps.git_info.outputs.tag }}
        run: |
          repo="${GITHUB_REPOSITORY,,}"  # to lower case
          # if build triggered by tag, use tag name
          tag="${git_tag:-latest}"
          # if tag is a version number prefixed by 'v', remove the 'v'
          if [[ "$tag" =~ ^v[0-9].* ]]; then
            tag="${tag:1}"
          fi
          dock_image=$repo:$tag
          echo $dock_image
          echo "::set-output name=dock_image::$dock_image"
          echo "::set-output name=repo::$repo"
      - uses: actions/checkout@v2
      - uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to DockerHub
        id: dockerhub_login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        id: docker_build
        with:
          context: .
          file: ./Dockerfile
          tags: |
            docker.io/${{ steps.determine.outputs.dock_image }}
            ghcr.io/${{ steps.determine.outputs.dock_image }}
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Update DockerHub description
        uses: peter-evans/dockerhub-description@v2
        continue-on-error: true  # it is not crucial that this works
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          short-description: ${{ steps.pluginmeta.outputs.title }}
          readme-filepath: ./README.rst
          repository: ${{ steps.determine.outputs.repo }}

      - name: Upload to ChRIS Store
        if: "!endsWith(steps.determine.outputs.dock_image, ':latest')"
        uses: FNNDSC/chrisstore-action@master
        with:
          descriptor_file: chris_plugin_info.json
          auth: ${{ secrets.CHRIS_STORE_USER }}